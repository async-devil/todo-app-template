@startuml architecture

skinparam componentStyle rectangle

actor "User"

component "Frontend / User Interface" %lighten("#b6d7a8", 20) {
  port "Browser" as WEB
  port "HTTP" as HTTP_F

  component "View" as FV #b6d7a8

  component "Controller" as FC #a4c2f4

  component "Model" as FM #dd7e6b
}

component "Backend" %lighten("#a4c2f4", 20) {
  port "HTTP" as HTTP_B
  port "TCP" as TCP_B

  component "Presentation Layer" #b6d7a8 {
    component "Controller" as BC
  }
  
  component "Application Layer" #a4c2f4 {
    component "Service" as BS
  }

  component "Persistence Layer" #dd7e6b {
    component "Repository" as BR
  }
}

component "Data Layer" %lighten("#dd7e6b", 20) {
  port "TCP" as TCP_D

  database "Database" as DB
}

User -> WEB : 1 Uses
WEB -> FV: 2
FV -> FC : 3

FC -> FM : 4 Manipulates
FM -> HTTP_F : 5 Calls API

HTTP_F -> FM : 16
FM -down-> FC : 17 Passes data

FC -> FV : 18 Updates
FV -> WEB : 19
WEB -> User : 20 Sees


HTTP_F <-> HTTP_B : REST API


HTTP_B -> BC : 6 Handles request
BC -> BS : 7 Calls
BS -> BR : 8 Uses

BR -> TCP_B : 9 Requests
TCP_B <-> TCP_D : Database connection
TCP_D -> DB : 10 Persists
DB -> TCP_D : 11 Returns
TCP_B -> BR : 12

BR -down-> BS : 13 Passes data
BS -up-> BC : 14
BC -> HTTP_B : 15 Replies

@enduml