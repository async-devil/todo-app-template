@startuml sequences


actor "User" as user

box "Frontend" %lighten("#b6d7a8", 20)
  participant "View" as fv #b6d7a8
  participant "Controller" as fc #a4c2f4
  participant "Model" as fm #dd7e6b
end box

box "Backend" %lighten("#a4c2f4", 20)
  participant "Controller" as bc #b6d7a8
  participant "Service" as bs #a4c2f4
  participant "Repository" as br #dd7e6b
end box

database "Database" as db #dd7e6b


== Create todo item ==

user -> fv : clicks create
fv -> fc : passes input data
fc -> fm : pipes
fm -> bc : sends CreateTodoDto

bc -> bc : validates input data

alt Invalid data
  bc -> fm : responses with 400
  fm -> fc : handles error
  fc -> fv : displays error
  fv -> user : sees error
end

bc -> bs : calls
bs -> br : passes data
br -> db : sends query

db -> db : processes query
db -> br : created TodoItem
br -> bs : returns TodoItem
bs -> bc : pipes
bc -> fm : responses with 201 and TodoItem

fm -> fc : passes new todos list
fc -> fv : updates list
fv -> user: sees updated list


== Get todo item by id ==

user -> fv : selects item
fv -> fc : provides id
fc -> fm : pipes
fm -> bc : sends GetTodoById

bc -> bc : validates input data

alt Invalid data
  bc -> fm : responses with 400
  fm -> fc : handles error
  fc -> fv : displays error
  fv -> user : sees error
end

bc -> bs : calls
bs -> br : passes id
br -> db : sends query

db -> db : processes query

alt Todo not found
  db -> br : throws or returns nothing
  br -> bs : throws 404
  bs -> bc
  bc -> fm : responses with 404
  fm -> fc : handles error
  fc -> fv : displays error
  fv -> user : sees error
end

db -> br : requested todo item
br -> bs : returns
bs -> bc
bc -> fm : responses with 200 and TodoItem

fm -> fc : returns
fc -> fv : displays todo item
fv -> user : sees todo page

@enduml